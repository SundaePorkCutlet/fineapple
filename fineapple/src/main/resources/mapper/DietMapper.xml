<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.fineapple.mapper.DietMapper">


		<resultMap id="DietServMap" type="DietServ">
		<result property="userId" 				column="USER_ID" 		jdbcType="VARCHAR"/>
		<result property="dietServiceTrgt" 				column="SERVICE_TRGT" 		jdbcType="VARCHAR"/>
		<result property="dailyTrgtIntakeKcal" 				column="DAILY_TRGT_INTAKE_KCAL" 		jdbcType="DOUBLE"/>
		<result property="dailyTrgtIntakeCarb" 				column="DAILY_TRGT_INTAKE_CARB" 		jdbcType="DOUBLE"/>
		<result property="dailyTrgtIntakeProtein" 			column="DAILY_TRGT_INTAKE_PROTEIN" 		jdbcType="DOUBLE"/>
		<result property="dailyTrgtIntakeFat" 				column="DAILY_TRGT_INTAKE_FAT" 		jdbcType="DOUBLE"/>
		<result property="bodyFat" 				column="BODY_FAT" 		jdbcType="DOUBLE"/>
		<result property="trgtBodyFat" 				column="TRGT_BODY_FAT" 		jdbcType="DOUBLE"/>
		<result property="userServiceNo"	column="USER_SERVICE_NO" jdbcType="INTEGER"/>
		
		</resultMap>
		
		<resultMap id ="IntakeRecordMap" type="IntakeRecord">
		<result property="food.foodNo" 				column="FOOD_NO" 		jdbcType="INTEGER"/>
		<result property="food.foodName"		column="FOOD_NAME"	jdbcType="VARCHAR"/>
		<result property="food.foodCd"		column="FOOD_CD"	jdbcType="VARCHAR"/>
		<result property="food.foodKcal"		column="FOOD_KCAL"	jdbcType="INTEGER"/>
		<result property="food.foodCarb"		column="FOOD_CARB"	jdbcType="INTEGER"/>
		<result property="food.foodProtein"		column="FOOD_PROTEIN"	jdbcType="INTEGER"/>
		<result property="food.foodFat"		column="FOOD_FAT"	jdbcType="INTEGER"/>
		<result property="userId" 	column="USER_ID" 		jdbcType="VARCHAR"/>
		<result property="meal" 				column="MEAL" 		jdbcType="VARCHAR"/>
		<result property="userFoodIntake" 	column="USER_FOOD_INTAKE" 		jdbcType="INTEGER"/>
  		<result property="userWtrIntake" 	column="USER_WTR_INTAKE" 		jdbcType="INTEGER"/>
  		<result property="count"				column="CT"			jdbcType="INTEGER"/>
		</resultMap>
		
		<resultMap id ="FoodMap" type="Food">
		<result property="foodNo" 				column="FOOD_NO" 		jdbcType="INTEGER"/>
		<result property="foodCd"		column="FOOD_CD"			jdbcType="VARCHAR"/>
		<result property="foodIntoStt" 	column="FOOD_INTO_STT" 		jdbcType="INTEGER"/>
		<result property="foodName" 				column="FOOD_NAME" 		jdbcType="VARCHAR"/>
		<result property="servingSize" 	column="SERVING_SIZE" 		jdbcType="INTEGER"/>
  		<result property="foodKcal" 	column="FOOD_KCAL" 		jdbcType="DOUBLE"/>
  		<result property="foodCarb" 	column="FOOD_CARB" 		jdbcType="DOUBLE"/>
  		<result property="foodProtein" 	column="FOOD_PROTEIN" 		jdbcType="DOUBLE"/>
  		<result property="foodFat"		column="FOOD_FAT"			jdbcType="DOUBLE"/>
  		<result property="foodSodium" 	column="FOOD_SODIUM" 		jdbcType="DOUBLE"/>
  		<result property="foodSugar" 	column="FOOD_SUGAR" 		jdbcType="DOUBLE"/>
  		<result property="price" 	column="PRICE" 		jdbcType="INTEGER"/>
  		<result property="isAPI" 	column="IS_API" 		jdbcType="INTEGER"/>
		</resultMap>
		
		<resultMap id ="FavMealMap" type="FavMeal">		
		<result property="userServiceNo" 				column="DIET_SERVICE_NO" 		jdbcType="INTEGER"/>
		<result property="favMealNo" 				column="FAV_MEAL_NO" 		jdbcType="INTEGER"/>
		<result property="favMealInfoNo" 				column="FAV_MEAL_INFO_NO" 		jdbcType="INTEGER"/>
		<result property="favMealName" 	column="FAV_MEAL_NAME" 		jdbcType="VARCHAR"/>
		<result property="favMealKcal" 				column="FAV_MEAL_KCAL" 		jdbcType="DOUBLE"/>
		<result property="food.foodCd" 				column="FOOD_CD" 		jdbcType="VARCHAR"/>
		<result property="food.foodIntoStt" 	column="FOOD_INTO_STT" 		jdbcType="INTEGER"/>
		<result property="food.foodName" 				column="FOOD_NAME" 		jdbcType="VARCHAR"/>
		<result property="Intake" 	column="SERVING_SIZE" 		jdbcType="DOUBLE"/>
  		<result property="food.foodKcal" 	column="FOOD_KCAL" 		jdbcType="DOUBLE"/>
  		<result property="food.foodCarb" 	column="FOOD_CARB" 		jdbcType="DOUBLE"/>
  		<result property="food.foodProtein" 	column="FOOD_PROTEIN" 		jdbcType="DOUBLE"/>
  		<result property="totalKcal"		column="TOTAL_KCAL"		jdbcType="DOUBLE"/>
		</resultMap>
		
		<resultMap id="TotalRecordMap" type="TotalRecord">
			<result property="theHighestIntakeDate" column="total_intake_date" javaType="java.time.LocalDate" jdbcType="DATE"/>
			<result property="totalIntakeKcal" column="total_intake_kcal" jdbcType="DOUBLE"/>
			<result property="totalIntakeCarb" column="total_intake_carb" jdbcType="DOUBLE"/>
			<result property="totalIntakeProtein" column="total_intake_protein" jdbcType="DOUBLE"/>
			<result property="totalIntakeFat" column="total_intake_fat" jdbcType="DOUBLE"/>
		</resultMap>


	<!-- 2020년 식약처 발표 한국인 영양 섭취 기준 탄수화물 130g 단백질 남자 60~65 여자 50~55 / 식약처가 정한 권장 섭취량 지방 51g -->
	<insert id="insertDietService" parameterType="DietServ">
	INSERT INTO USER_SERVICE (USER_SERVICE_NO,USER_ID,DAILY_TRGT_INTAKE_KCAL,DAILY_TRGT_INTAKE_CARB,DAILY_TRGT_INTAKE_PROTEIN,DAILY_TRGT_INTAKE_FAT,TRGT_BODY_FAT)
	VALUES (seq_user_service_no.NEXTVAL,
			#{userId:DOUBLE},
			#{dailyTrgtIntakeKcal:DOUBLE},
			130,
			60,
			51,
			#{trgtBodyFat:DOUBLE})
	
	</insert>
	
	<update id="updateDietServiceNo" parameterType="DietServ">
	UPDATE USERS 
	SET Diet_SERVICE_NO=#{userServiceNo:INTEGER}
	WHERE USER_ID=#{userId:VARCHAR}
	</update>
	
	
	<update id="updateDietService" parameterType="DietServ">
	UPDATE USER_SERVICE SET 
	DAILY_TRGT_INTAKE_KCAL=#{dailyTrgtIntakeKcal:DOUBLE},
	TRGT_BODY_FAT=#{trgtBodyFat:DOUBLE}
	WHERE USER_ID=#{userId:VARCHAR}
	</update>
	
	<select id="getDietService" parameterType="String" resultType="DietServ">
	SELECT *
	FROM ( SELECT us.*, ui.body_fat
			FROM   USER_SERVICE  us LEFT JOIN user_body_info ui ON us.user_id = ui.user_id
		    WHERE  ui.user_id = #{value}
			ORDER BY ROWNUM DESC  )
	WHERE  ROWNUM = 1
	</select>
	
	
	
	<update id="updateServiceTrgt" parameterType="DietServ">
	UPDATE USERS 
	SET SERVICE_TRGT=#{serviceTrgt:VARCHAR}
	WHERE USER_ID=#{userId:VARCHAR}
	</update>

	<insert id="insertIntakeRecord" parameterType="IntakeRecord">
	INSERT INTO INTAKE_RECORD (INTAKE_RECORD_NO, USER_SERVICE_NO, FOOD_CD,FOOD_NAME,FOOD_KCAL,FOOD_CARB,FOOD_PROTEIN,FOOD_FAT, USER_ID, INTAKE_RECORD_DATE, MEAL, USER_FOOD_INTAKE) 
	VALUES (seq_intake_record_no.NEXTVAL,
			(SELECT user_service_no from USER_SERVICE WHERE USER_ID = #{userId:VARCHAR}),
			#{food.foodCd:VARCHAR},
			#{food.foodName:VARCHAR},
			#{food.foodKcal:DOUBLE},
			#{food.foodCarb:DOUBLE},
			#{food.foodProtein:DOUBLE},
			#{food.foodFat:DOUBLE},
			#{userId:VARCHAR},
			SYSDATE,
			#{meal:VARCHAR},
			#{userFoodIntake:DOUBLE}

			)
	</insert>
	
	
	<select id="getIntakeRecordList" parameterType="Integer" resultMap="IntakeRecordMap">
	SELECT * FROM INTAKE_RECORD 
	WHERE TO_CHAR(INTAKE_RECORD_DATE,'YYYYMMDD') = TO_CHAR(SYSDATE,'YYYYMMDD')
	 AND USER_SERVICE_NO = #{userServiceNo}
	</select>
	
	
	
	<update id="updateIntakeRecord" parameterType="IntakeRecord">
	UPDATE INTAKE_RECORD SET
	USER_FOOD_INTAKE =#{userFoodIntake:DOUBLE}
	WHERE INTAKE_RECORD_NO = #{intakeRecordNo:DOUBLE}
	</update>
	
	<delete id="deleteIntakeRecord" parameterType="Integer">
	DELETE FROM INTAKE_RECORD
	WHERE INTAKE_RECORD_NO = #{value}
	
	
	</delete>
	
	
	
	
	
	
	   <update id="updateBodyInfo" parameterType="DietServ">
  	 UPDATE user_body_info
  	 SET BODY_FAT=#{bodyFat:FLOAT}
  	 WHERE USER_ID = #{userId:VARCHAR}
      </update>

	
	
	<select  id="getFoodList"  parameterType="hashMap"  resultMap="FoodMap">
	SELECT *
	FROM (SELECT inner_table.* , ROWNUM AS food_No
	FROM(SELECT food_cd, food_name, food_Kcal, food_carb, food_protein, food_fat, serving_size 
	FROM FOOD
	<if test="searchCondition != null">
	<where>
	<if test="searchCondition == 0 and searchKeyword !='' ">
	food_name like '%'||#{searchKeyword}||'%'
	</if>
	<if test="searchCondition == 1 and searchKeyword !='' ">
	food_kcal like '%'||#{searchKeyword}||'%'
	</if>
	</where>
	</if>
	ORDER BY food_No ) inner_table)
	WHERE food_No BETWEEN 1 AND 4
	<!-- WHERE ROWNUM &lt;= #{endRowNum} )
	WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum}  -->
	</select>
	
	<select id="getFood" parameterType="String" resultMap="FoodMap">
	SELECT * FROM FOOD
	WHERE food_cd =#{value}
	
	
	</select>
	
	<insert id="addFood" parameterType="Food">
	INSERT INTO FOOD(FOOD_NO,FOOD_CD,FOOD_NAME,FOOD_KCAL,FOOD_CARB,FOOD_PROTEIN,FOOD_FAT,
					FOOD_SODIUM,FOOD_SUGAR,SERVING_SIZE,IS_API)
	VALUES(seq_food_food_no.NEXTVAL,
			'U'||seq_food_food_cd_no.NEXTVAL,
			#{foodName:VARCHAR},
			#{foodKcal:DOUBLE},
			#{foodCarb:DOUBLE},
			#{foodProtein:DOUBLE},
			#{foodFat:DOUBLE},
			#{foodSodium:DOUBLE},
			#{foodSugar:DOUBLE},
			#{servingSize:DOUBLE},
			1)
	</insert>
	
	<update id="updateFood" parameterType="Food">
	update food set
	Food_NAME = #{foodName:VARCHAR},
	FOOD_KCAL = #{foodKcal:DOUBLE},
	FOOD_CARB = #{foodCarb:DOUBLE},
	FOOD_PROTEIN = #{foodProtein:DOUBLE},
	FOOD_FAT = #{foodFat:DOUBLE},
	FOOD_SODIUM = #{foodSodium:DOUBLE},
	FOOD_SUGAR = #{foodSugar:DOUBLE},
	SERVING_SIZE = #{servingSize:DOUBLE}
	</update>
	
	<delete id="deleteFood" parameterType="String">
	delete from food
	where food_cd = #{value}
	
	
	</delete>
	
	

	<insert id="insertFavMeal" parameterType="FavMeal">
	INSERT INTO FAV_MEAL(fav_Meal_no,
	diet_service_no, fav_meal_name,fav_meal_kcal) 
	VALUES(seq_fav_meal_fav_Meal_no.NEXTVAL,
	(SELECT user_service_no FROM user_service WHERE user_id=#{userId:VARCHAR}),
	#{favMealName:VARCHAR},
	#{favMealKcal:DOUBLE} )
	
	</insert>
	
	<update id="updateFavMealName" parameterType="FavMeal">
	UPDATE FAV_MEAL SET
	fav_meal_name = #{favMealName:VARCHAR}
	WHERE FAV_MEAL_NO=#{favMealNo:INTEGER}
	</update>
	
	<delete id="deleteFavMeal" parameterType="Integer">
	Delete FROM FAV_MEAL
	WHERE FAV_MEAL_NO = #{VALUE}
	</delete>
	
	
	<select id="getFavMealList" parameterType="Integer" resultMap="FavMealMap">
    select a.fav_meal_no,a.diet_service_no,a.fav_meal_name,a.fav_meal_kcal,sum(b.food_kcal) total_kcal 
    from FAV_MEAL a left join fav_meal_info b on a.fav_meal_no=b.fav_meal_no
	WHERE diet_service_no=#{value}
	group by a.fav_meal_no,a.diet_service_no,a.fav_meal_name,a.fav_meal_kcal
   </select>
	

	
	<insert id="insertFavMealItem" parameterType="FavMeal">
	INSERT INTO FAV_MEAL_INFO(FAV_MEAL_INFO_NO,FAV_MEAL_NO,FOOD_CD,FOOD_NAME,FOOD_PROTEIN,FOOD_FAT,SERVING_SIZE,FOOD_KCAL,FOOD_CARB)
	VALUES (seq_fav_meal_info_no.NEXTVAL,
			#{favMealNo:INTEGER},
			#{food.foodCd:VARCHAR},
			#{food.foodName:VARCHAR},
			#{food.foodProtein:DOUBLE},
			#{food.foodFat:DOUBLE},
			#{intake:DOUBLE},
			#{food.foodKcal:DOUBLE},
			#{food.foodCarb:DOUBLE})
	
	
	</insert>
	
	<select id="getFavMealItemList" parameterType="Integer" resultMap="FavMealMap">
	SELECT * FROM FAV_MEAL_INFO
	WHERE FAV_MEAL_NO = #{VALUE}
	</select>
	
	<select id="getFavMealItem" parameterType="Integer" resultMap="FavMealMap">
	SELECT * FROM FAV_MEAL_INFO
	WHERE FAV_MEAL_INFO_NO = #{VALUE}
	</select>
	
	<delete id="deleteFavMealItem" parameterType="Integer">
	DELETE FAV_MEAL_INFO
	WHERE FAV_MEAL_INFO_NO = #{VALUE}	
	</delete>
	
	<update id="updateFavMealItem" parameterType="FavMeal">
	update fav_meal_info set
	serving_size = #{intake:DOUBLE}
	WHERE FAV_MEAL_INFO_No = #{favMealInfoNo:INTEGER}
	</update>
	
	<update id="updatebadge" parameterType="badge">
	update badge set
	 DIET_BADGE_COUNT = 1
	</update>
	
	<select id="FavIntake" parameterType="String" resultMap="IntakeRecordMap">
	select ser.food_cd,ser.food_name,ser.ct from (select serv.ct,serv.food_name,serv.food_cd from intake_record ir,(select food_name,food_cd,count(food_cd) ct from intake_record
	where user_id = #{value}
	group by food_cd,food_name
    ) serv
	where ir.food_cd = serv.food_cd
    group by ct,serv.food_name,serv.food_cd
    order by  serv.ct desc) ser
    where rownum&lt;4

	</select>
	
	
	
	
	<!-- 다이어리 담당자 하리니가 작성함 -->
	<select id="getIntakeRecordListForDiary" resultMap="IntakeRecordMap">
	SELECT * FROM INTAKE_RECORD 
	WHERE TRUNC(intake_record_date) BETWEEN TRUNC(#{startDate}) AND TRUNC(#{endDate})
	 AND USER_SERVICE_NO = #{userServiceNo}
	</select>
	
	<!-- 다이어리 담당자 하리니가 작성함 -->
	<select id="getTotalDietRecord" resultMap="TotalRecordMap">
	SELECT SUM(food_kcal) as "total_intake_kcal", SUM(food_carb) as "total_intake_carb", SUM(food_protein) as "total_intake_protein", SUM(food_fat) as "total_intake_fat"
	FROM intake_record
	WHERE user_id = #{userId:VARCHAR}
	AND TRUNC(intake_record_date) BETWEEN TRUNC(#{startDate}) AND TRUNC(#{endDate})
	GROUP BY TRUNC(intake_record_date)
	</select>
	
	<!-- 다이어리 담당자 하리니가 작성함 -->
	<select id="getDaysCount" resultType="int">
	SELECT COUNT(DISTINCT(intake_record_date))
	FROM intake_record
	WHERE user_id = #{userId:VARCHAR}
	AND TRUNC(intake_record_date) BETWEEN TRUNC(#{startDate}) AND TRUNC(#{endDate})
	</select>
	
	<!-- 다이어리 담당자 하리니가 작성함 -->
	<select id="getTheHighestIntakeKcalDay" resultMap="TotalRecordMap">
	SELECT total_intake_date, total_intake_kcal
	FROM (SELECT TRUNC(intake_record_date) as "total_intake_date", SUM(food_kcal), as "total_intake_kcal"
			FROM intake_record
			WHERE user_id = #{userId:VARCHAR}
			AND TRUNC(intake_record_date) BETWEEN TRUNC(#{startDate}) AND TRUNC(#{endDate})
			GROUP BY TRUNC(intake_record_date)
			ORDER BY 2 DESC)
	WHERE ROWNUM <![CDATA[<=]]> 1
	</select>
	
</mapper>